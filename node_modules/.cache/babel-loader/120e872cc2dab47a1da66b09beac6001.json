{"ast":null,"code":"var _jsxFileName = \"/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/Components/TodoListItem.tsx\";\nimport React from 'react';\nimport './TodoListItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListItem = ({\n  todo,\n  mapTodo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: todo.complete ? \"complete\" : undefined,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.complete,\n        onChange: () => mapTodo(todo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), todo.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n};\n\n_c = TodoListItem;\nexport default TodoListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/Components/TodoListItem.tsx"],"names":["React","TodoListItem","todo","mapTodo","complete","undefined","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;;;AAOA,MAAMC,YAAyC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACrE,sBAAQ;AAAA,2BACI;AAAO,MAAA,SAAS,EAAED,IAAI,CAACE,QAAL,GAAgB,UAAhB,GAA6BC,SAA/C;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEH,IAAI,CAACE,QAArC;AAA+C,QAAA,QAAQ,EAAE,MAAMD,OAAO,CAACD,IAAD;AAAtE;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKA,IAAI,CAACI,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAAR;AAMH,CAPD;;KAAML,Y;AASN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Todo, MapTodo } from './../Types/index';\nimport './TodoListItem.css'\n\ninterface TodoListItemProps {\n    todo: Todo,\n    mapTodo: MapTodo\n}\n\nconst TodoListItem: React.FC<TodoListItemProps> = ({ todo, mapTodo }) => {\n    return (<li>\n                <label className={todo.complete ? \"complete\" : undefined}>\n                    <input type=\"checkbox\" checked={todo.complete} onChange={() => mapTodo(todo)}/>\n                    {todo.text}\n                </label>\n            </li>)\n}\n\nexport default TodoListItem;"]},"metadata":{},"sourceType":"module"}