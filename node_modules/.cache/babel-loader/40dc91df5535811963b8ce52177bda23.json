{"ast":null,"code":"var _jsxFileName = \"/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoListItem from './Components/TodoListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  text: \"Set a Data Base for every user\",\n  complete: false\n}, {\n  text: \"Create the user log in interface\",\n  complete: true\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(initialTodos);\n\n  const mapTodos = selectTodo => {\n    const newTodos = todos.map(todo => {\n      if (todo === selectTodo) {\n        return { ...todo,\n          complete: !todo.complete\n        };\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoListItem, {\n      todo: todos[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoListItem, {\n      todo: todos[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8yCmoPUuqM1vaUbV/+pWostrM30=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/App.tsx"],"names":["React","useState","TodoListItem","initialTodos","text","complete","App","todos","setTodos","mapTodos","selectTodo","newTodos","map","todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,MAAMC,YAAoB,GAAG,CAC3B;AAACC,EAAAA,IAAI,EAAC,gCAAN;AAAwCC,EAAAA,QAAQ,EAAE;AAAlD,CAD2B,EAE3B;AAACD,EAAAA,IAAI,EAAC,kCAAN;AAA0CC,EAAAA,QAAQ,EAAE;AAApD,CAF2B,CAA7B;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACE,YAAD,CAAlC;;AAEA,QAAMM,QAAQ,GAAKC,UAAF,IAAwB;AACvC,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACjC,UAAGA,IAAI,KAAKH,UAAZ,EAAwB;AACtB,eAAO,EACL,GAAGG,IADE;AAELR,UAAAA,QAAQ,EAAE,CAACQ,IAAI,CAACR;AAFX,SAAP;AAID;;AACD,aAAOQ,IAAP;AACD,KARgB,CAAjB;AASAL,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAXD;;AAaA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEJ,KAAK,CAAC,CAAD;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,KAAK,CAAC,CAAD;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtBQD,G;;KAAAA,G;AAwBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Todo } from './Types/index';\nimport TodoListItem from './Components/TodoListItem'\n\nconst initialTodos: Todo[] = [\n  {text:\"Set a Data Base for every user\", complete: false}, \n  {text:\"Create the user log in interface\", complete: true}\n]\n\nfunction App() {\n  const [todos, setTodos] = useState(initialTodos)\n\n  const mapTodos = ( selectTodo: Todo ) => {\n    const newTodos = todos.map(todo => {\n      if(todo === selectTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  }\n\n  return (\n    <React.Fragment>\n      <TodoListItem todo={todos[1]}/>\n      <TodoListItem todo={todos[0]} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}