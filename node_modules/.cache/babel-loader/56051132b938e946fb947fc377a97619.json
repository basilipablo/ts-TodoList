{"ast":null,"code":"var _jsxFileName = \"/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddTodoForm from './Components/AddTodoForm';\nimport TodoList from './Components/TodoList';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  text: \"Make a Todo List App\",\n  complete: true\n}, {\n  text: \"Make my Todo List App prettier\",\n  complete: false\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(initialTodos);\n  const [sign, setSign] = useState(false);\n\n  const mapTodos = selectTodo => {\n    var newTodos = todos.map(todo => {\n      if (todo === selectTodo) {\n        return { ...todo,\n          complete: !todo.complete\n        };\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = selectTodo => {\n    var newTodos = todos.filter(todo => todo !== selectTodo);\n    setTodos(newTodos);\n  };\n\n  const addTodo = newTodo => {\n    //string is redundant, but lets leave it as a reminder of what value are we getting, the reason we are using TS in the first place. Reassurance.\n    var findifExists = todos.filter(todo => todo.text === newTodo);\n    if (findifExists.length > 0) return setSign(!sign);\n\n    if (newTodo.trim() !== \"\") {\n      if (sign) setSign(false);\n      setTodos([...todos, {\n        text: newTodo,\n        complete: false\n      }]);\n    }\n  };\n\n  const useStyles = makeStyles({\n    root: {\n      background: \"linear-gradient(45deg, #184e77, #168aad)\",\n      margin: \"10rem\",\n      borderRadius: \"3rem\",\n      padding: \"3rem\",\n      boxShadow: \"3rem, 3rem\"\n    }\n  });\n  const classDiv = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classDiv.root,\n      children: [/*#__PURE__*/_jsxDEV(AddTodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        mapTodo: mapTodos,\n        deleteTodo: deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), sign ? /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Already Exists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this) : undefined]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v95HbouyK89aAUv78nWA3xpoqlg=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/App.tsx"],"names":["React","useState","AddTodoForm","TodoList","makeStyles","initialTodos","text","complete","App","todos","setTodos","sign","setSign","mapTodos","selectTodo","newTodos","map","todo","deleteTodo","filter","addTodo","newTodo","findifExists","length","trim","useStyles","root","background","margin","borderRadius","padding","boxShadow","classDiv","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Todo, MapTodo, AddTodo, DeleteTodo } from './Types/index';\nimport AddTodoForm from './Components/AddTodoForm';\nimport TodoList from './Components/TodoList';\nimport './App.css'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst initialTodos: Todo[] = [\n  {text:\"Make a Todo List App\", complete: true}, \n  {text:\"Make my Todo List App prettier\", complete: false}\n]\n\nfunction App() {\n  const [todos, setTodos] = useState(initialTodos)\n  const [sign, setSign] = useState(false)\n\n  const mapTodos: MapTodo = ( selectTodo: Todo ) => {\n    var newTodos = todos.map(todo => {\n      if(todo === selectTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  }\n\n  const deleteTodo: DeleteTodo = (selectTodo: Todo) => {\n    var newTodos = todos.filter(todo => \n        todo !== selectTodo\n      );\n    setTodos(newTodos);\n  }\n\n  const addTodo: AddTodo = (newTodo: string) => { //string is redundant, but lets leave it as a reminder of what value are we getting, the reason we are using TS in the first place. Reassurance.\n    var findifExists = todos.filter(todo => todo.text === newTodo)\n    if(findifExists.length>0) return setSign(!sign)\n    if(newTodo.trim() !== \"\"){\n    if(sign)setSign(false)\n    setTodos([\n      ...todos,\n      {text: newTodo, complete: false}\n    ])}\n  }\n\n  const useStyles = makeStyles({\n    root: {\n      background: \"linear-gradient(45deg, #184e77, #168aad)\",\n      margin: \"10rem\",\n      borderRadius: \"3rem\",\n      padding: \"3rem\",\n      boxShadow: \"3rem, 3rem\"\n    }\n  })\n\n  const classDiv = useStyles();\n\n  return (\n    <React.Fragment>\n      <div className={classDiv.root}>\n      <AddTodoForm addTodo={addTodo} />\n      <TodoList todos={todos} mapTodo={mapTodos} deleteTodo={deleteTodo} />\n      {sign ? <a>Already Exists</a> : undefined}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}