{"ast":null,"code":"var _jsxFileName = \"/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/Components/AddTodoForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTodoForm = ({\n  addTodo\n}) => {\n  _s();\n\n  const [newTodo, setNewTodo] = useState(\"\"); //we could put <string> next to useState, but lets just let TS infere it\n\n  const handleChange = i => {\n    setNewTodo(i.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTodo(newTodo);\n    setNewTodo(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      value: newTodo,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(ListAltIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 28\n      }, this),\n      type: \"submit\",\n      onClick: handleSubmit,\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTodoForm, \"oyCy+yC4LrN9rT+2zASGlvYyUZ8=\");\n\n_c = AddTodoForm;\nexport default AddTodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodoForm\");","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/Components/AddTodoForm.tsx"],"names":["React","useState","Button","TextField","ListAltIcon","AddTodoForm","addTodo","newTodo","setNewTodo","handleChange","i","target","value","handleSubmit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAwD,OAAxD;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAMA,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC7D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC,CAD6D,CAClB;;AAE3C,QAAMQ,YAAY,GAAIC,CAAD,IAAsC;AACvDF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAqC;AACtDA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,OAAO,CAACC,OAAD,CAAP;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAJD;;AAMA,sBACA;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAED,OAAlB;AAA2B,MAAA,QAAQ,EAAEE;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,SAAS,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAnB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAkD,MAAA,OAAO,EAAEI,YAA3D;AAAyE,MAAA,OAAO,EAAC,WAAjF;AAA6F,MAAA,KAAK,EAAC,SAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CAnBD;;GAAMR,W;;KAAAA,W;AAqBN,eAAeA,WAAf","sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { AddTodo } from './../Types/index';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\ninterface AddTodoFormProps {\n    addTodo: AddTodo\n}\n\nconst AddTodoForm: React.FC<AddTodoFormProps> = ({ addTodo }) => {\n    const [newTodo, setNewTodo] = useState(\"\") //we could put <string> next to useState, but lets just let TS infere it\n\n    const handleChange = (i: ChangeEvent<HTMLInputElement>) => {\n        setNewTodo(i.target.value)\n    }\n\n    const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        addTodo(newTodo);\n        setNewTodo(\"\");\n    }\n\n    return (\n    <form>\n        <TextField value={newTodo} onChange={handleChange} />\n        <Button startIcon={<ListAltIcon />} type=\"submit\" onClick={handleSubmit} variant=\"contained\" color=\"primary\" >Add Todo</Button>\n    </form>\n    )\n}\n\nexport default AddTodoForm;"]},"metadata":{},"sourceType":"module"}