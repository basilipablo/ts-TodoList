{"ast":null,"code":"var _jsxFileName = \"/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/Components/TodoListItem.tsx\";\nimport React from 'react';\nimport './TodoListItem.css';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: green\n  }\n});\n\nconst TodoListItem = ({\n  todo,\n  mapTodo,\n  deleteTodo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: todo.complete ? \"complete\" : undefined,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => mapTodo(todo),\n          color: \"primary\",\n          children: \"Done/Undone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          deleteTodo(todo);\n        },\n        children: \"Remove!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n};\n\n_c = TodoListItem;\nexport default TodoListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/Components/TodoListItem.tsx"],"names":["React","Button","green","createMuiTheme","ThemeProvider","theme","palette","primary","TodoListItem","todo","mapTodo","deleteTodo","complete","undefined","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;;AASA,MAAMC,KAAK,GAAGF,cAAc,CAAC;AACzBG,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAEL;AADJ;AADgB,CAAD,CAA5B;;AAMA,MAAMM,YAAyC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAmC;AACjF,sBAAQ;AAAA,2BACI;AAAO,MAAA,SAAS,EAAEF,IAAI,CAACG,QAAL,GAAgB,UAAhB,GAA6BC,SAA/C;AAAA,8BACI;AAAA,kBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAET,KAAtB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMK,OAAO,CAACD,IAAD,CAA9B;AAAsC,UAAA,KAAK,EAAC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACE,UAAAA,UAAU,CAACF,IAAD,CAAV;AAAiB,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAAR;AASH,CAVD;;KAAMD,Y;AAYN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Todo, MapTodo, DeleteTodo } from './../Types/index';\nimport './TodoListItem.css'\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\n\ninterface TodoListItemProps {\n    todo: Todo,\n    mapTodo: MapTodo,\n    deleteTodo: DeleteTodo\n}\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: green,\n    },\n});\n\nconst TodoListItem: React.FC<TodoListItemProps> = ({ todo, mapTodo, deleteTodo }) => {\n    return (<li>\n                <label className={todo.complete ? \"complete\" : undefined}>\n                    <h1>{todo.text}</h1>\n                    <ThemeProvider theme={theme}>\n                        <Button onClick={() => mapTodo(todo)} color=\"primary\">Done/Undone</Button>\n                    </ThemeProvider>\n                    <Button onClick={() => {deleteTodo(todo)}}>Remove!</Button>\n                </label>\n            </li>)\n}\n\nexport default TodoListItem;"]},"metadata":{},"sourceType":"module"}