{"ast":null,"code":"var _jsxFileName = \"/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddTodoForm from './Components/AddTodoForm';\nimport TodoList from './Components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [{\n  text: \"Set a Data Base for every user\",\n  complete: false\n}, {\n  text: \"Create the user log in interface\",\n  complete: true\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(initialTodos);\n\n  const mapTodos = selectTodo => {\n    const newTodos = todos.map(todo => {\n      if (todo === selectTodo) {\n        return { ...todo,\n          complete: !todo.complete\n        };\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const addTodo = newTodo => {\n    setTodos([...todos, {\n      text: newTodo,\n      complete: false\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      mapTodo: mapTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8yCmoPUuqM1vaUbV/+pWostrM30=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/ProyectosLibres/TodoListTS/ts-todolist/src/App.tsx"],"names":["React","useState","AddTodoForm","TodoList","initialTodos","text","complete","App","todos","setTodos","mapTodos","selectTodo","newTodos","map","todo","addTodo","newTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,YAAoB,GAAG,CAC3B;AAACC,EAAAA,IAAI,EAAC,gCAAN;AAAwCC,EAAAA,QAAQ,EAAE;AAAlD,CAD2B,EAE3B;AAACD,EAAAA,IAAI,EAAC,kCAAN;AAA0CC,EAAAA,QAAQ,EAAE;AAApD,CAF2B,CAA7B;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACG,YAAD,CAAlC;;AAEA,QAAMM,QAAiB,GAAKC,UAAF,IAAwB;AAChD,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACjC,UAAGA,IAAI,KAAKH,UAAZ,EAAwB;AACtB,eAAO,EACL,GAAGG,IADE;AAELR,UAAAA,QAAQ,EAAE,CAACQ,IAAI,CAACR;AAFX,SAAP;AAID;;AACD,aAAOQ,IAAP;AACD,KARgB,CAAjB;AASAL,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAXD;;AAaA,QAAMG,OAAgB,GAAIC,OAAD,IAAqB;AAC5CP,IAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;AAACH,MAAAA,IAAI,EAAEW,OAAP;AAAgBV,MAAAA,QAAQ,EAAE;AAA1B,KAFO,CAAD,CAAR;AAID,GALD;;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEE,KAAjB;AAAwB,MAAA,OAAO,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEK;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7BQR,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Todo, MapTodo, AddTodo } from './Types/index';\nimport AddTodoForm from './Components/AddTodoForm'\nimport TodoList from './Components/TodoList'\n\nconst initialTodos: Todo[] = [\n  {text:\"Set a Data Base for every user\", complete: false}, \n  {text:\"Create the user log in interface\", complete: true}\n]\n\nfunction App() {\n  const [todos, setTodos] = useState(initialTodos)\n\n  const mapTodos: MapTodo = ( selectTodo: Todo ) => {\n    const newTodos = todos.map(todo => {\n      if(todo === selectTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  }\n\n  const addTodo: AddTodo = (newTodo: string) => {\n    setTodos([\n      ...todos,\n      {text: newTodo, complete: false}\n    ])\n  }\n\n  return (\n    <React.Fragment>\n      <TodoList todos={todos} mapTodo={mapTodos}/>\n      <AddTodoForm addTodo={addTodo} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}